

def startContainer(String containerVersion ) {
    String containerName = getAppContainerName()
    String alias = containerName.replace('/', '_')
    sh "docker run --rm  --name ${alias} -d -p 9001:8080 ${containerName}:${containerVersion}"
}

def stopContainer(String containerVersion ) {
    String containerName = getAppContainerName()
    String alias = containerName.replace('/', '_')
    sh "docker stop ${alias}"
}

def String getAppContainerName() {
    return 'pmdevel/codenite-demo-app'
}

stage('Build') {
    node('maven') {

        echo 'Check-out code'
        // Use pipeline parameter for Git URL
        sh 'git --version'
        git credentialsId: 'github-pmdevel', url: 'https://github.com/pmdevel/jenkins2-demo-source-webapp.git'
        echo 'Building...'

        // Let Maven help you to create a "release" version. Use BUILD_NUMBER from Jenkins
        sh 'mvn build-helper:parse-version versions:set -DnewVersion=\\${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.$BUILD_NUMBER versions:commit '

        // Get version from pom
        def pom = readMavenPom file: 'pom.xml'
        writeFile file: "version.properties", text: "version=${pom.version}"

        sh 'cat version.properties'
        stash includes: "version.properties", name: "$JOB_NAME"
        // Build application, package into docker image and push it to Docker Hub...
        // version comes with build-arg VERSION
        //sh "mvn clean package docker:build -DpushImage "
        sh "mvn clean package docker:build "
    }
}

stage('Test') {
    node('maven') {
        echo 'Testing...'
        unstash "$JOB_NAME"
        sh 'cat version.properties'
        def props = readProperties file: 'version.properties'
        echo "Application version: ${props.version}"
        def containerVersion = props.version
        def containerName = getAppContainerName()
        // Start container
        echo "Starting ${containerName}..."
        startContainer(containerVersion);
        echo "Start tests"
        sleep(10)
        stopContainer(containerVersion);
        echo "Stops ${getAppContainerName()}..."

    }
}
